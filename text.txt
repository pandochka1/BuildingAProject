1 шаг. проверить наличие подключение версии 
    node --version (может быть 2 сообщения: версия nodejs или "команда не является внутренней")
2 шаг. установка nodejs https://nodejs.org/en/ (скачиваем lts версию - является стабильной)
3 шаг. глобально установить поддержку gulp через командную строку
         - Установливаем  утилиту командной строки gulp : npm install --global gulp-cli (требуется время для установки)
         - Создаем папку для нашего проекта (можно ее создать при помощи проводника и перейти в нее)
         - npx mkdirp my-project  или cd путь до каталога 
         - Создаем package.json внутри своего проекта: npm init , затем указываем имя создаваемого файла, можно нажать enter 
         description: my test Gulp build
         entry point: (index.js) точка входа, главный файл по умолчанию 
         author: name
         Is this OK? (yes) yes
         - 


Появится файл: package.json
Содержание файла: 
{
  "name": "buildingaproject",
  "version": "1.0.0",
  "description": "my test Gulp build",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Eliseeva Anastasiya",
  "license": "ISC"
}

Можно работать с терминалом в VS Code (для этого удалим созданный файл)
Также можно указать npm init -y , что позволеят пропустить все этапы 

4 Шаг. Установка самого галпа: npm install --save-dev gulp (локальная установка в сам проект)
копируем команду и ждем ПКМ в терминале (требуется время для установки)
Просмотр версии gulp: gulp --version



-------------------------------------------------------------------------
Установка плагинов 
1) less

5 Шаг. Create a gulpfile: создание gulpfile, js файл со всем его синтаксисом
создаем его любым удобнм способом (создала его , как обычный файл)
дабвим в него код с сайта 
"
      function defaultTask(cb) {
        // place code for your default task here
        cb();
      }

      exports.default = defaultTask
"
в терминале выполняем команду: gulp

------------------------------------------------------------------------
https://www.npmjs.com/ при помощи данного сайта можно искать любые модули и устанавливать их


https://www.npmjs.com/package/gulp - модуль gulp
https://www.npmjs.com/package/less - плагин less
https://www.npmjs.com/package/del - del (позволяет удалять каталоги или файлы)


шаг 1: npm i less -D установка в devDependencies, а не в Dependencies
devDependencies савятcя модули для оптимизации кода (НЕ попадает в фильную версию)
Dependencies - ставятся файлы необходимые для работы приложеня (например библиотеки, попадает в фильную версию)

шаг 2. подключить плагины 
npm i less -D
npm i del -D

ПРИ ДАННОЙ ВЕРСИИ  "del": "^7.1.0" ВОЗНИКАЕТ ОШИБКА!!! 
ИСПРАВЛЕНИЕ ОШИБКИ: 
  1. УДАЛИТЬ МОДУЛЬ DEL npm uninstall del
  2. УСТАНОВИТЬ СТАРУЮ ВЕРСИЮ npm i del@6.0.0 -D

шаг 3. вызвать gulp clean
данная строка длжна очистить папку dist


-----------------------------------------------
создаем структуру проекта
src - удет содержать все наши файлы
  - styles - css файлы (less...)
  - scripts - содержит все файлы js 
создаем константу с путям в папку dist 
создаем html, подключаем в нем минифицированные файлы css и js. 
Этих файлов  еще нет, но они подключатся при компиляции


---------------------------------------------------
обработка стилей 
после компил. файла css в dist (gulp styles) внесем изменения в less и снова запустим gulp styles

необходимо минифицирать файл

установим плагины
https://www.npmjs.com/package/gulp-clean-css
https://www.npmjs.com/package/gulp-rename



запустить команду: gulp styles
после этого в каталоге dist с ком-ся несколько css файлов: обычный, созданный сразу при компиляции (когда мы тестировали функцию)  и созданный при минификации 




ЧТОБЫ НЕ СОЗДАВАЛОСЬ НЕСКОЛЬКО ФАЙЛОВ, НЕОБХОДИМО ОЧИЩАТЬ ПАПКУ DIST ПРИ компиляции
----------------------------
атоматизация задачи 
будет следеить за изменениями в докмунтах и перзапускать функции

--------------------------------
задача по обработки скриптов
https://www.npmjs.com/package/gulp-uglify - для минификации и оптимизации кода 
https://www.npmjs.com/package/gulp-concat  - для объединения нескольких файлов
https://www.npmjs.com/package/gulp-babel
https://www.npmjs.com/package/@babel/core - первод из нового стндарта в старый





